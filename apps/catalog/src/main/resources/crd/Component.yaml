apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: component.catalog.kubebits.io
spec:
  group: catalog.kubebits.io
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: 'A Component describes a software component. It is typically intimately linked to the source code that constitutes the component, and should be what a developer may regard a "unit of software", usually with a distinct deployable or linkable artifact.'
          example:
            - apiVersion: backstage.io/v1alpha1
              kind: Component
              metadata:
                name: LoremService
                description: Creates Lorems like a pro.
                labels:
                  product_name: Random value Generator
                annotations:
                  docs: 'https://github.com/..../tree/develop/doc'
              spec:
                type: service
                lifecycle: production
                owner: tools
          allOf:
            - description: The parts of the format that's common to all versions/kinds of entity.
              example:
                - apiVersion: backstage.io/v1alpha1
                  kind: Component
                  metadata:
                    name: LoremService
                    description: Creates Lorems like a pro.
                    labels:
                      product_name: Random value Generator
                    annotations:
                      docs: 'https://github.com/..../tree/develop/doc'
                  spec:
                    type: service
                    lifecycle: production
                    owner: tools
              type: object
              required:
                - apiVersion
                - kind
                - metadata
              additionalProperties: false
              properties:
                apiVersion:
                  type: string
                  description: The version of specification format for this particular entity that this is written against.
                  minLength: 1
                  example:
                    - backstage.io/v1alpha1
                    - my-company.net/v1
                    - '1.0'
                kind:
                  type: string
                  description: The high level entity type being described.
                  minLength: 1
                  example:
                    - API
                    - Component
                    - Domain
                    - Group
                    - Location
                    - Resource
                    - System
                    - Template
                    - User
                metadata:
                  description: Metadata fields common to all versions/kinds of entity.
                  example:
                    - uid: e01199ab-08cc-44c2-8e19-5c29ded82521
                      etag: lsndfkjsndfkjnsdfkjnsd==
                      generation: 13
                      name: my-component-yay
                      namespace: the-namespace
                      labels:
                        backstage.io/custom: ValueStuff
                      annotations:
                        example.com/bindings: are-secret
                      tags:
                        - java
                        - data
                  type: object
                  required:
                    - name
                  additionalProperties: true
                  properties:
                    uid:
                      type: string
                      description: 'A globally unique ID for the entity. This field can not be set by the user at creation time, and the server will reject an attempt to do so. The field will be populated in read operations. The field can (optionally) be specified when performing update or delete operations, but the server is free to reject requests that do so in such a way that it breaks semantics.'
                      example:
                        - e01199ab-08cc-44c2-8e19-5c29ded82521
                      minLength: 1
                    etag:
                      type: string
                      description: 'An opaque string that changes for each update operation to any part of the entity, including metadata. This field can not be set by the user at creation time, and the server will reject an attempt to do so. The field will be populated in read operations. The field can (optionally) be specified when performing update or delete operations, and the server will then reject the operation if it does not match the current stored value.'
                      example:
                        - lsndfkjsndfkjnsdfkjnsd==
                      minLength: 1
                    generation:
                      type: integer
                      description: 'A positive nonzero number that indicates the current generation of data for this entity; the value is incremented each time the spec changes. This field can not be set by the user at creation time, and the server will reject an attempt to do so. The field will be populated in read operations.'
                      example:
                        - 1
                      minimum: 1
                    name:
                      type: string
                      description: 'The name of the entity. Must be unique within the catalog at any given point in time, for any given namespace + kind pair.'
                      example:
                        - metadata-proxy
                      minLength: 1
                    namespace:
                      type: string
                      description: The namespace that the entity belongs to.
                      default: default
                      example:
                        - default
                        - admin
                      minLength: 1
                    title:
                      type: string
                      description: 'A display name of the entity, to be presented in user interfaces instead of the name property, when available.'
                      example:
                        - React SSR Template
                      minLength: 1
                    description:
                      type: string
                      description: 'A short (typically relatively few words, on one line) description of the entity.'
                    labels:
                      type: object
                      description: Key/value pairs of identifying information attached to the entity.
                      additionalProperties: true
                    annotations:
                      type: object
                      description: Key/value pairs of non-identifying auxiliary information attached to the entity.
                      additionalProperties: true
                    tags:
                      type: array
                      description: 'A list of single-valued strings, to for example classify catalog entities in various ways.'
                      items:
                        type: string
                        minLength: 1
                    links:
                      type: array
                      description: 'A list of external hyperlinks related to the entity. Links can provide additional contextual information that may be located outside of Backstage itself. For example, an admin dashboard or external CMS page.'
                      items:
                        type: object
                        required:
                          - url
                        properties:
                          url:
                            type: string
                            description: A url in a standard uri format.
                            example:
                              - 'https://admin.example-org.com'
                            minLength: 1
                          title:
                            type: string
                            description: A user friendly display name for the link.
                            example:
                              - Admin Dashboard
                            minLength: 1
                          icon:
                            type: string
                            description: A key representing a visual icon to be displayed in the UI.
                            example:
                              - dashboard
                            minLength: 1
                spec:
                  type: object
                  description: The specification data describing the entity itself.
                relations:
                  type: array
                  description: The relations that this entity has with other entities.
                  items:
                    type: object
                    description: A directed relation from one entity to another.
                    required:
                      - type
                      - target
                    additionalProperties: false
                    properties:
                      type:
                        type: string
                        minLength: 1
                        pattern: ^\w+$
                        description: The type of relation.
                      target:
                        type: object
                        description: A reference by name to another entity.
                        required:
                          - kind
                          - namespace
                          - name
                        additionalProperties: false
                        properties:
                          kind:
                            type: string
                            description: The kind field of the entity.
                            minLength: 1
                          namespace:
                            type: string
                            description: The metadata.namespace field of the entity.
                            minLength: 1
                          name:
                            type: string
                            description: The metadata.name field of the entity.
                            minLength: 1
                status:
                  type: object
                  description: 'The current status of the entity, as claimed by various sources.'
                  additionalProperties: true
                  properties:
                    items:
                      type: array
                      items:
                        type: object
                        description: A specific status item on a well known format.
                        required:
                          - type
                          - level
                          - message
                        additionalProperties: true
                        properties:
                          type:
                            type: string
                            minLength: 1
                          level:
                            type: string
                            description: A status level / severity.
                            enum:
                              - info
                              - warning
                              - error
                          message:
                            type: string
                            description: 'A brief message describing the status, intended for human consumption.'
                          error:
                            type: object
                            description: A serialized error object.
                            required:
                              - name
                              - message
                            additionalProperties: true
                            properties:
                              name:
                                type: string
                                example:
                                  - Error
                                  - InputError
                                description: The type name of the error
                                minLength: 1
                              message:
                                type: string
                                description: The message of the error
                              code:
                                type: string
                                description: An error code associated with the error
                              stack:
                                type: string
                                description: An error stack trace
            - type: object
              required:
                - spec
              properties:
                apiVersion:
                  enum:
                    - backstage.io/v1alpha1
                    - backstage.io/v1beta1
                kind:
                  enum:
                    - Component
                spec:
                  type: object
                  required:
                    - type
                    - lifecycle
                    - owner
                  properties:
                    type:
                      type: string
                      description: The type of component.
                      example:
                        - service
                        - website
                        - library
                      minLength: 1
                    lifecycle:
                      type: string
                      description: The lifecycle state of the component.
                      example:
                        - experimental
                        - production
                        - deprecated
                      minLength: 1
                    owner:
                      type: string
                      description: An entity reference to the owner of the component.
                      example:
                        - artist-relations-team
                        - 'user:john.johnson'
                      minLength: 1
                    system:
                      type: string
                      description: An entity reference to the system that the component belongs to.
                      minLength: 1
                    subcomponentOf:
                      type: string
                      description: An entity reference to another component of which the component is a part.
                      minLength: 1
                    providesApis:
                      type: array
                      description: An array of entity references to the APIs that are provided by the component.
                      items:
                        type: string
                        minLength: 1
                    consumesApis:
                      type: array
                      description: An array of entity references to the APIs that are consumed by the component.
                      items:
                        type: string
                        minLength: 1
                    dependsOn:
                      type: array
                      description: An array of references to other entities that the component depends on to function.
                      items:
                        type: string
                        minLength: 1

  names:
    kind: Component
    singular: Component
    plural: components
    shortNames:
      - cmp
  scope: Namespaced
